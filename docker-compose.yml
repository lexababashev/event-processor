services:
  postgres:
    image: postgres:15-alpine
    container_name: event_processor_db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: event_processor
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d event_processor -h localhost -p 5432 || exit 1"]
      interval: 10s
      timeout: 1m
      retries: 5

  migrations:
    image: node:20-alpine
    container_name: event_processor_migrations
    working_dir: /app
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgresql://user:password@postgres:5432/event_processor"
    command: >
      sh -c "npm install && npx prisma migrate deploy && npx prisma generate"

  nats:
    image: nats:latest
    container_name: event_processor_nats
    restart: always
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["-js", "-m", "8222",  "--store_dir", "/var/lib/nats/jetstream"]
    volumes:
      - nats-data:/var/lib/nats/jetstream
    healthcheck:
      test: ["CMD", "nats-server", "-v"]
      interval: 10s
      timeout: 1m
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: "4G"
        reservations:
          cpus: "1"
          memory: "1G"

  publisher:
    image: andriiuni/events
    container_name: events_publisher
    restart: always
    platform: linux/arm64/v8
    environment:
      EVENT_ENDPOINT: "http://gateway:3000/events"
    depends_on:
      nats:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"

  gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    container_name: event_processor_gateway
    restart: always
    ports:
      - "3000:3000"
    environment:
      NATS_URL: "nats://nats:4222"
      GATEWAY_PORT: 3000
    depends_on:
      nats:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "2G"
        reservations:
          cpus: "1"
          memory: "1G"

  prometheus:
    image: prom/prometheus:latest
    container_name: event_processor_prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:9090/-/ready || exit 1"]
      interval: 10s
      timeout: 1m
      retries: 5

  grafana:
    image: grafana/grafana:latest
    container_name: event_processor_grafana
    restart: always
    ports:
      - "3031:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      prometheus:
        condition: service_healthy

  fs-collector:
    build:
      context: .
      dockerfile: Dockerfile.fscollector
    container_name: event_processor_fscollector
    restart: always
    ports:
      - "3002:3002"
    environment:
      DATABASE_URL: "postgresql://user:password@postgres:5432/event_processor?schema=public"
      NATS_URL: "nats://nats:4222"
    depends_on:
      nats:
        condition: service_healthy
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "2G"
        reservations:
          cpus: "1"
          memory: "1G"

  ttk-collector:
    build:
      context: .
      dockerfile: Dockerfile.ttkcollector
    container_name: event_processor_ttkcollector
    restart: always
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: "postgresql://user:password@postgres:5432/event_processor?schema=public"
      NATS_URL: "nats://nats:4222"
    depends_on:
      nats:
        condition: service_healthy
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "2G"
        reservations:
          cpus: "1"
          memory: "1G"

  reporter:
    build:
      context: .
      dockerfile: Dockerfile.reporter
    container_name: event_processor_reporter
    restart: always
    ports:
      - "3003:3003"
    environment:
      DATABASE_URL: "postgresql://user:password@postgres:5432/event_processor"
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "2G"
        reservations:
          cpus: "1"
          memory: "1G"

volumes:
  nats-data:
  postgres-data:
  grafana-data: